import{_ as i,c as a,a3 as t,o as e}from"./chunks/framework.CU8sZ3gx.js";const c=JSON.parse('{"title":"PowerShell 美化","description":"","frontmatter":{},"headers":[],"relativePath":"daily/pwsh.md","filePath":"daily/pwsh.md"}'),p={name:"daily/pwsh.md"};function l(n,s,h,o,k,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="powershell-美化" tabindex="-1">PowerShell 美化 <a class="header-anchor" href="#powershell-美化" aria-label="Permalink to &quot;PowerShell 美化&quot;">​</a></h1><blockquote><p>By: Arnold 2024/05/24</p></blockquote><h2 id="引子" tabindex="-1">引子 <a class="header-anchor" href="#引子" aria-label="Permalink to &quot;引子&quot;">​</a></h2><p>突发奇想 git bash 能否像 fish bash 一样去给用户提示，结果 GPT 告诉我 git bash 不支持包管理。又觉得平时用的 powershell 实在是太丑了，蓝色的背景，也没有提示词，对大部分新手都不是很友好，动不动报一堆开发者错误，下图还是安装了 Terminal 改变了背景颜色的 PowerShell 的样子</p><p><img src="https://raw.githubusercontent.com/dotama/pic-storage/master/2024/05/upgit_20240524_1716539875.png" alt="P1"></p><p>闲话少说，开始改造：</p><h2 id="升级-powershell-版本" tabindex="-1">升级 PowerShell 版本 <a class="header-anchor" href="#升级-powershell-版本" aria-label="Permalink to &quot;升级 PowerShell 版本&quot;">​</a></h2><ol><li>执行命令<code>$PSVersionTable</code>查看当前 PowerShell 版本：</li></ol><blockquote><p>Name Value</p><hr><p>PSVersion 5.1.22621.2506 PSEdition Desktop PSCompatibleVersions {1.0, 2.0, 3.0, 4.0...} BuildVersion 10.0.22621.2506 CLRVersion 4.0.30319.42000 WSManStackVersion 3.0 PSRemotingProtocolVersion 2.3 SerializationVersion 1.1.0.1</p></blockquote><ol start="2"><li><p>安装 choco 和 winget</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set-ExecutionPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bypass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Process</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force; [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">System.Net.ServicePointManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::SecurityProtocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">System.Net.ServicePointManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::SecurityProtocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-bor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3072</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; iex ((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">New-Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.Net.WebClient).DownloadString(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://community.chocolatey.org/install.ps1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choco install powershell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">core </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span></span></code></pre></div><p>安装完关闭 Terminal，直接点击新的 PowerShell 如下图</p><p><img src="https://raw.githubusercontent.com/dotama/pic-storage/master/2024/05/upgit_20240524_1716544579.png" alt="69b56616bd7751cb67590efef856dc1"></p></li></ol><h2 id="安装oh-my-posh" tabindex="-1">安装<a href="https://ohmyposh.dev/" target="_blank" rel="noreferrer">oh-my-posh</a> <a class="header-anchor" href="#安装oh-my-posh" aria-label="Permalink to &quot;安装[oh-my-posh](https://ohmyposh.dev/)&quot;">​</a></h2><ol><li><p>必须管理员执行<code>choco install oh-my-posh</code></p></li><li><p>再次关闭 Terminal 以管理员执行<code>oh-my-posh font install</code>安装字体，第一个即可</p></li><li><p>字体添加进 pwsh 配置文件</p><p>执行<code>ctrl+shift+,</code>打开配置文件，在 profiles 添加 font 代码：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;profiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;defaults&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;font&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;face&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0xProto Nerd Font&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span></code></pre></div></li><li><p>使用 oh-my-posh</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鉴于一般会报错没有$PROFILE文件，先执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">New-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type File </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 再执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notepad </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span></span></code></pre></div><p>这时候在打开的记事本中插入</p><blockquote><p>oh-my-posh init pwsh | Invoke-Expression</p></blockquote><p>保存退出 执行<code>. $PROFILE</code>加载，完成如下图：</p></li></ol><p><img src="https://raw.githubusercontent.com/dotama/pic-storage/master/2024/05/upgit_20240524_1716545754.png" alt="44563d04afcd750b57d71b3b0bdd1f7"></p><ol start="5"><li><p>更换主题</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#执行下面命令获取全部在线主题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get-PoshThemes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#更换主题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">posh init pwsh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">POSH_THEMES_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/wholespace.omp.json&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Invoke-Expression</span></span></code></pre></div><p>但是这样更换主题新开 pwsh 又是默认主题，所以需要再次打开 notepad,把它写入$PROFILE</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>notepad $PROFILE</span></span></code></pre></div><p>notepad 里修改为</p><blockquote><p>oh-my-posh init pwsh --config &quot;$env:POSH_THEMES_PATH/wholespace.omp.json&quot; | Invoke-Expression</p></blockquote><p>保存退出，再次执行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>. $PROFILE</span></span></code></pre></div><p>这样每次打开就是你喜欢的主题了</p><p><img src="https://raw.githubusercontent.com/dotama/pic-storage/master/2024/05/upgit_20240524_1716546645.png" alt="image-20240524183041580"></p><p>当然最重要的是有像fish那样的提示功能，不过pwsh不能像linux一样直接按tab就能补全的（微软会自己给命令按字母排序🙄） <img src="https://raw.githubusercontent.com/dotama/pic-storage/master/2024/05/upgit_20240524_1716549955.png" alt="image-20240524192554748"></p></li></ol><h1 id="fin" tabindex="-1">FIN <a class="header-anchor" href="#fin" aria-label="Permalink to &quot;FIN&quot;">​</a></h1>`,15)]))}const g=i(p,[["render",l]]);export{c as __pageData,g as default};
